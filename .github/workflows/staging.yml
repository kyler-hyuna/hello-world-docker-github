name: Staging Deploy

on: push

jobs:
  package:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Read .nvmrc
        run: echo "##[set-output name=nvmrc;]$(cat .nvmrc)"
        id: nvm

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ steps.nvm.outputs.nvmrc }}

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - run: yarn lint
      - run: yarn test

      - uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ github.token }}
          registry: docker.pkg.github.com
          repository: ${{ github.repository	}}/corp-api
          tag_with_ref: true
  # deploy:
  #   name: Deploy to ECS
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - run: echo ::set-env name=RELEASE_VERSION::${GITHUB_REF:10}
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: us-east-1
  #     - name: Download task def
  #       run: |
  #         aws ecs describe-task-definition --task-definition kyle-hello-world-staging --query taskDefinition > task-definition.json
  #     - name: Fill in the new image ID in the Amazon ECS task definition
  #       id: task-def
  #       uses: aws-actions/amazon-ecs-render-task-definition@v1
  #       with:
  #         task-definition: task-definition.json
  #         container-name: kyle-hello-world-staging
  #         image: 'docker.pkg.github.com/kyler-hyuna/hello-world-docker-github/hello-world:${{ env.RELEASE_VERSION }}'
  #     - name: Deploy to Amazon ECS service
  #       uses: aws-actions/amazon-ecs-deploy-task-definition@v1
  #       with:
  #         task-definition: ${{ steps.task-def.outputs.task-definition }}
  #         cluster: kyle-hello-world-staging
  #         service: app
